<?xml version="1.0"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->


<project name="framework" default="main" basedir=".">

    <!--
        ANT_OPTS should have maximum heap size set to at least 256m.  Use the -Xmx999m switch and replace 999 with value.

       <property environment="env"/>
       <echo message="ANT_OPTS is currently set to ${env.ANT_OPTS}.  Please make sure the max heap size is set to at least 256m (-Xmx256m)."/>
    -->

    <property name="FLEX_HOME" value="${basedir}/.."/>

    <property file="${FLEX_HOME}/env.properties"/>
    <property environment="env"/>
    <property file="${FLEX_HOME}/local.properties"/>
    <property file="${FLEX_HOME}/build.properties"/>

    <property name="env.PLAYERGLOBAL_HOME" location="${basedir}/libs/player"/>
    <property name="build.number" value="0"/>
    <property name="playerglobal.version" value="11.5"/>
    <property name="playerglobal.dir" value="${env.PLAYERGLOBAL_HOME}/${playerglobal.version}"/>
    <property name="airsdk.dir" value="${env.AIR_HOME}"/>
    
    <property name="projects.dir" value="${FLEX_HOME}/frameworks/projects"/>

    <property name="starling.dir" value="${projects.dir}/starling"/>
    <property name="feathers.dir" value="${projects.dir}/feathers"/>
    <property name="feathers-mxml.dir" value="${projects.dir}/feathers-mxml"/>
    <property name="authoringsupport.dir" value="${projects.dir}/authoringsupport"/>
    <property name="core.dir" value="${projects.dir}/core"/>
    <property name="framework.dir" value="${projects.dir}/framework"/>

    <property name="compc.jvm.args" value="-Xmx384m" />
    
    <taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar;${FLEX_HOME}/lib/flexTasks.jar"/>

    <target name="main" depends="check-compile-env,clean,thirdparty-downloads,prepare,framework,core,authoringsupport,starling,feathers,feathers-mxml,bundles"/>

    <target name="bundles" depends="framework_rb"/>

    <target name="prepare"
        description="Copies manifests to project directories so the IDE can find them">
        
        <copy file="${FLEX_HOME}/frameworks/spark-manifest.xml" tofile="${FLEX_HOME}/frameworks/projects/spark/manifest.xml" overwrite="true"/>
    </target>
    
    <target name="check-compile-env" depends="check-playerglobal-home,check-air-home"
        description="Check for the required environment variables for compilation"/>

    <target name="check-playerglobal-home" unless="playerglobal.swc.exists"
        description="Check PLAYERGLOBAL for both a directory and a swc file">

        <echo message="PLAYERGLOBAL_HOME is ${env.PLAYERGLOBAL_HOME}"/>
        <echo message="playerglobal.version is ${playerglobal.version}"/>

        <available file="${env.PLAYERGLOBAL_HOME}" 
            type="dir" 
            property="PLAYERGLOBAL_HOME.set"/>

        <fail message="The environment variable PLAYERGLOBAL_HOME is not set to a directory" 
            unless="PLAYERGLOBAL_HOME.set"/>

        <property name="playerglobal.swc" 
            value="${env.PLAYERGLOBAL_HOME}/${playerglobal.version}/playerglobal.swc"/>

        <available file="${playerglobal.swc}" 
            type="file" 
            property="playerglobal.swc.exists"/>
        
        <fail message="The file ${playerglobal.swc} does not exist" 
            unless="playerglobal.swc.exists"/>
            
        <echo message="playerglobal.swc is ${playerglobal.swc}"/>
    </target>
    
    <target name="check-air-home"
        description="Check that AIR_HOME is a directory">
        
        <condition property="AIR_HOME.set">
            <and>
                <length string="${env.AIR_HOME}" when="greater" length="0" />
                <available file="${env.AIR_HOME}" type="dir"/>
            </and>
        </condition>
        
        <fail message="The environment variable AIR_HOME must be set to the AIR Integration Kit directory" 
            unless="AIR_HOME.set"/>
    </target>

    <target name="authoringsupport" description="Builds authoringsupport.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true" 
            output="${basedir}/libs/authoringsupport.swc" include-classes="AuthoringSupportClasses"
            locale="${locale}" accessible="true"
            resource-bundle-list="${authoringsupport.dir}/bundles.properties">
            <source-path path-element="${authoringsupport.dir}/src"/>
            <external-library-path dir="${playerglobal.dir}" includes="playerglobal.swc"/>
            <external-library-path dir="${basedir}/libs">
                <include name="framework.swc"/>
            </external-library-path>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>

    <target name="starling" description="Builds starling.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true" 
            output="${basedir}/libs/starling.swc"
            locale="${locale}" accessible="true">
            <source-path path-element="${starling.dir}/Starling-Framework/starling/src"/>
            <include-sources dir="${starling.dir}/Starling-Framework/starling/src" includes="*"/>
            <external-library-path dir="${playerglobal.dir}" includes="playerglobal.swc"/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>

    <target name="feathers" description="Builds feathers.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true" 
            output="${basedir}/libs/feathers.swc"
            locale="${locale}" accessible="true"
            resource-bundle-list="${feathers.dir}/bundles.properties">
            <source-path path-element="${feathers.dir}/feathers/source"/>
            <include-sources dir="${feathers.dir}/feathers/source" includes="*"/>
            <external-library-path dir="${playerglobal.dir}" includes="playerglobal.swc"/>
            <external-library-path dir="${basedir}/libs">
                <include name="starling.swc"/>
            </external-library-path>
            <keep-as3-metadata name="Bindable"/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>

    <target name="feathers-mxml" description="Builds feathers-mxml.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true" 
            output="${basedir}/libs/feathers-mxml.swc"
            locale="${locale}" accessible="true"
            resource-bundle-list="${feathers-mxml.dir}/bundles.properties">
            <source-path path-element="${feathers-mxml.dir}/source"/>
            <include-sources dir="${feathers-mxml.dir}/source" includes="*"/>
            <external-library-path dir="${playerglobal.dir}" includes="playerglobal.swc"/>
            <external-library-path dir="${basedir}/libs">
                <include name="framework.swc"/>
                <include name="starling.swc"/>
                <include name="feathers.swc"/>
            </external-library-path>
            <keep-as3-metadata name="Bindable"/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
    
    <target name="core" description="Builds core.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true" include-classes="CoreClasses" 
            output="${basedir}/libs/core.swc" locale="${locale}" accessible="true"
            resource-bundle-list="${core.dir}/bundles.properties">
            <source-path path-element="${core.dir}/src"/>
            <source-path path-element="${framework.dir}/src"/>
            <load-config filename="${framework.dir}/framework-config.xml"/>
            <library-path/>
            <external-library-path dir="${playerglobal.dir}" includes="playerglobal.swc"/>
            <keep-as3-metadata name="Bindable"/>
            <keep-as3-metadata name="Managed"/>
            <keep-as3-metadata name="ChangeEvent"/>
            <keep-as3-metadata name="NonCommittingChangeEvent"/>
            <keep-as3-metadata name="Transient"/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
    
    <target name="framework" description="Builds libs/framework.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true" include-classes="FrameworkClasses" 
            output="${basedir}/libs/framework.swc" locale="${locale}" accessible="true"
            resource-bundle-list="${framework.dir}/bundles.properties">
            <source-path path-element="${framework.dir}/src"/>
            <external-library-path dir="${playerglobal.dir}" includes="playerglobal.swc"/>
            <load-config filename="${basedir}/flex-config.xml"/>
            <load-config filename="${framework.dir}/framework-config.xml"/>
            <library-path/>
            <keep-as3-metadata name="Bindable" />
            <keep-as3-metadata name="Managed" />
            <keep-as3-metadata name="ChangeEvent" />
            <keep-as3-metadata name="NonCommittingChangeEvent" />
            <keep-as3-metadata name="Transient" />          
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>

    <target name="framework_rb" description="Builds default locale framework_rb.swc">
        <compc static-link-runtime-shared-libraries="true" fork="true" 
            output="${basedir}/locale/${locale}/framework_rb.swc" locale="${locale}">
            <include-resource-bundles bundle="SharedResources"/>
            <include-resource-bundles bundle="collections"/>
            <include-resource-bundles bundle="controls"/>
            <include-resource-bundles bundle="core"/>
            <include-resource-bundles bundle="effects"/>
            <include-resource-bundles bundle="formatters"/>
            <include-resource-bundles bundle="logging"/>
            <include-resource-bundles bundle="modules"/>
            <include-resource-bundles bundle="skins"/>
            <include-resource-bundles bundle="states"/>
            <include-resource-bundles bundle="styles"/>
            <include-resource-bundles bundle="utils"/>
            <include-resource-bundles bundle="validators"/>
            <source-path path-element="${framework.dir}/bundles/${locale}"/>
            <source-path path-element="${framework.dir}/src"/>
            <external-library-path dir="${playerglobal.dir}" includes="playerglobal.swc"/>
            <library-path/>
            <jvmarg line="${compc.jvm.args}"/>
        </compc>
    </target>
        
    <!-- Download thirdparty code -->
    
    <target name="thirdparty-downloads" description="Downloads all the required thirdparty code.">
        <ant antfile="${basedir}/downloads.xml" dir="${basedir}"/>
    </target>

    <target name="thirdparty-clean" description="Removes all thirdparty downloads.">
        <ant antfile="${basedir}/downloads.xml" target="clean" dir="${basedir}"/>
    </target>
    
    <target name="super-clean" depends="thirdparty-clean,clean" description="Cleans everything."/>
    
    <target name="clean" depends="bundles-clean" description="Cleans all SWCs.">
        <delete failonerror="false" includeEmptyDirs="true">
            <fileset dir="${basedir}/libs">
                <include name="framework.swc"/>
                <include name="core.swc"/>
                <include name="authoringsupport.swc"/>
                <include name="starling.swc"/>
                <include name="feathers.swc"/>
                <include name="feathers-mxml.swc"/>
            </fileset>
        </delete>
    </target>

    <target name="bundles-clean" description="Cleans all the resource bundles">
        <delete failonerror="false">
            <fileset dir="${basedir}/locale/${locale}">
                <include name="framework_rb.swc"/>
            </fileset>
        </delete>
        <delete dir="${basedir}/projects" includes="*/bundles.properties"/>
    </target>
        <delete includeemptydirs="true">
            <fileset dir="${FLEX_HOME}/templates" excludes="**/*" />
        </delete>    
</project>
